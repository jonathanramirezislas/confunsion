{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","onClick","isLoading","errMess","active","Header","state","isNavOpen","isModalOpen","toggleModal","bind","toggleNav","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","target","values","console","log","JSON","stringify","resetFeedbackForm","postFeedback","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","tag","left","object","body","heading","About","leaders","title","list","CommentForm","modal","postComment","dishId","rating","author","message","RenderDish","top","RenderComments","comments","listComments","comment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetails","handleServerResponse","response","ok","error","Error","status","statusText","handleServerError","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","errorMessage","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","json","addComment","catch","feedback","addFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b7f2e23.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n     \r\n  //Functional components\r\nfunction RenderMenuItem({dish}) {\r\n    return(\r\n                 \r\n        <Card>\r\n        <Link to={`/menu/${dish.id}`} > \r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n        </Link>\r\n    </Card>\r\n    );\r\n}\r\n\r\n    const Menu = (props) => {\r\n\r\n       \r\n        const menu = props.dishes.dishes.map((dish) => {\r\n\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    {/** dish first parameter , onClik second parameter (props) */}\r\n                      <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n                </div>\r\n            );\r\n\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n  \r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        isNavOpen: false,\r\n        isModalOpen: false\r\n      };\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.toggleNav = this.toggleNav.bind(this);\r\n      this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n\r\n/***\r\n * \r\n * innerRef={(input) => this.username = input} /> nos ayudar para extaer la iformcaicon del form\r\n *innerRef is like the ref of html\r\ninnerRef?: (?HTMLElement) => \r\nFunction that can be used to obtain popper reference\r\n */\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n\r\n        {/** NavToogler will shown only in small screens*/}\r\n        <NavbarToggler onClick={this.toggleNav} />\r\n\r\n        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n            <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Restaurant Jonas' />\r\n        </NavbarBrand>\r\n     \r\n        {/** Collapse helps to show the items in better appearence for samll diveces\r\n         * isOpen is attribute that helps to show or hide the tem by clicking NavbarToggler\r\n        */}\r\n        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                <Nav navbar>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                  <NavItem>\r\n                    <Button outline onClick={this.toggleModal}>\r\n                      <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                    </Button>\r\n                  </NavItem>\r\n                </Nav>\r\n        </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>restaurant Jonas</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n\r\n          <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\">Home</a></li>\r\n                        <li><a href=\"#\">About</a></li>\r\n                        <li><a href=\"#\">Menu</a></li>\r\n                        <li><a href=\"contactus.html\">Contact</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Aguascalientes<br />\r\n\t\t              Mx<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +555 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +555 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         jonathan@jonathanramirezislas.com.mx</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Restaurant Jonas</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n    /**\r\n     * RenderCard({item}) will receve \r\n     * item.designation  is only to whoe for leader.js \r\n     * \r\n     */\r\n    function RenderCard({item, isLoading, errMess}) {\r\n     \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n    return(\r\n        <FadeTransform in\r\n        transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card>\r\n            <CardImg src={baseUrl + item.image} alt={item.name} />\r\n            <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    </FadeTransform>\r\n    );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} \r\n                errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <   RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n                 /*   parameter       */\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n\r\nclass Contact extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n     \r\n     \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n     /* this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this); */\r\n    }    \r\n    \r\n    /**\r\n * \r\nConcepts \r\nEl uso más simple de bind() es hacer que una función que, sin importar cómo es llamada, \r\nsiempre apunte al mismo objeto con la referencia this. Un error común para nuevos programadores\r\n    de JavaScript es que obtienen una referencia a un método de un objeto,\r\n    posteriormente ejecutan ese método desde la referencia externa y esperan que la referencia de \r\n    this siga apuntando al objeto original de donde se obtuvo el método (v.g. cuando\r\n    se usa ese método en un callback). Sin el debido cuidado, el objeto original es comúnmente perdido. \r\n    Creando una función ligada desde la función  empleando el objeto original, resuelve limpiamente este problema\r\n   \r\n   \r\n<FormFeedback>{errors.firstname}</FormFeedback>\r\nAyudara a mostrar los errores que contenga errors.firtsname\r\n\r\nonBlur =Every time you get out of focus from the input field, the event will trigger.\r\n */\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n \r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values);\r\n        alert('Thank you for your feedback!\\n' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n   \r\n    \r\n\r\n  \r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            Aguascalientes<br />\r\n                            \r\n                            Mexico<br />\r\n                            <i className=\"fa fa-phone\"></i>: 449 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: 449 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:jonathan@jonathanramirezislas.com.mx\">jonathan@jonathanramirezislas.com.mx</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:jonathan@jonathanramirezislas.com.mx\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader(leader) {\r\n    if (leader != null) {\r\n        return(\r\n            \r\n                <Media tag=\"li\">\r\n                    \r\n                        <Media left>\r\n                            <Media object src={baseUrl + leader.leader.image} alt={leader.leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.leader.name}</Media>\r\n                            <p>{leader.leader.designation}</p> \r\n                            <p>{leader.leader.description}</p>\r\n                        </Media>\r\n                    \r\n                </Media>\r\n            \r\n        );\r\n    } else {\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n\r\nfunction About(props) {\r\n    props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader key={leader.id} leader={leader} />\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.leaders.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else { \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                <Media list>\r\n                        <Stagger in>                            \r\n                            {props.leaders.leaders.map((leader) => {  \r\n                                return (\r\n                                    <Fade in>\r\n                                    <div key={leader.id} className=\"col-12 m-1\">                                        \r\n                                        <RenderLeader leader={leader} />                                        \r\n                                    </div>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </Media>     \r\n                </div>\r\n                 \r\n            </div>\r\n        </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default About;   ","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n         CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader,\r\n         ModalBody, ModalFooter, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    handleSubmit(values){\r\n        /*\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n\r\n        */\r\n       this.toggle();\r\n       //this fuction is that we get from props and is located in actioncreators.js (redux)\r\n       this.props.postComment(this.props.dishId, values.rating, values.author, values.message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button color=\"default\" onClick={this.toggle}><span className=\"fa fa-pencil fa-lg\">Submit Comment</span></Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={12}>Your Feedback</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                    </ModalFooter> \r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n//function components\r\nfunction  RenderDish({dish}){\r\n    if(dish){\r\n        return (\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n        <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </FadeTransform> \r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n\r\n        const listComments = comments.map(comment=> {\r\n            return (\r\n                <Stagger in>\r\n                {comments.map((comment) => {\r\n                    return (\r\n                        <Fade in>\r\n                        <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                        </li>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n                </Stagger>\r\n            ); })\r\n        if(comments){\r\n            return (\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        {listComments}\r\n                    </ul> \r\n                                {/* parmas = DishId and the function to post commmets          */}\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );   \r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetails = (props) =>{\r\n\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <Breadcrumb>\r\n\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                            </div>                \r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderComments comments={props.comments} \r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n        }\r\n    }\r\n \r\n\r\nexport default DishDetails;","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const handleServerResponse = response => {\r\n  if (response.ok) {\r\n      return response;\r\n  } else {\r\n      var error = new Error('Error ' + response.status + ':' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n  }\r\n}\r\n\r\nexport const handleServerError = error => {\r\n  var errorMessage = new Error(error.message);\r\n  throw errorMessage;\r\n}\r\n\r\n\r\n                            //return a fuction   \r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    // put the dishes in our store\r\n    //WITH fetch comunication to the server\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n      if (response.ok) {//if we get the data correctly \r\n                //this response will pass to the next .the() #line 30\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;//to execute .catch\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;//to execute .catch\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n//fetch coments\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n/*  addcommetn function will return a javascript object with:\r\ntype is like a description that we imported from ActionTypes.js\r\npyload will contain the data(new comment)\r\n\r\nNOTE THIS OBJECT WILL USE IN comments.js\r\n*/                             // (params)\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    \r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    ///add the current date\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })//NOTE THE server will include de id for the comment\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(dishesLoading());\r\n  return fetch(baseUrl + 'leaders')\r\n      .then(handleServerResponse, handleServerError)\r\n      .then(response => response.json())\r\n      .then(leaders => dispatch(addLeaders(leaders)))\r\n      .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errorMessage) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\n\r\n\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(feedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n      })\r\n      .then(response => {\r\n          if (response.ok) {\r\n              return response;\r\n          } else {\r\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n              error.response = response;\r\n              throw error;\r\n          }\r\n      },\r\n      error => {\r\n          throw error;\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => dispatch(addFeedback(response)))\r\n      .catch(error =>  { console.log('Post Feedback', error.message);\r\n          alert('Your Feedback could not be posted\\nError: '+error.message); });\r\n};","//string constant, is usufull for large project and expand \r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS'; \r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, { Component } from 'react';\r\n\r\nimport Menu from './MenuComponent' ;\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishDetailComponent' ;\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback  } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n/***Get state from redux  */\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n                        //parameter\r\nconst mapDispatchToProps = dispatch => ({\r\n//object      parameteres                         //dispatch the action to add coments (ActionCrators)\r\npostComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  \r\n  /*\r\n  fetchDishes is a thunk and we will dispatch it\r\n  so will availble in the Main(function app)\r\n  \r\n  */\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n\r\n    //the form named as feedback reset with this function\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))}\r\n\r\n\r\n\r\n});\r\n\r\n//function App() \r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n      super(props) ;\r\n\r\n    \r\n    }\r\n\r\n    //when main component is mounted we execute the functions\r\n    componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n    }\r\n    \r\n\r\n \r\n  render() {\r\n\r\n/**\r\n * dish.featured is True will return objets of dishes but we will pass only first element using dish.featured)[0]\r\n \r\n functions from ActionCreatos\r\n dishesLoading,dishesErrMess,..\r\n */\r\nconst HomePage = () => {\r\n  return(\r\n      <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n      />\r\n  );\r\n}\r\n\r\n    /*\r\n     *  match.params.dishId,10)  , (,10) is the base 0,1,2,3..9\r\n      [0] first element \r\n     \r\n     *  comments={this.state.c .... will extract all the comments match with DishId\r\n  \r\n     *   addComment={this.props.addComment} this function that is declare above will use in Dishdtail to add a coment \r\n         so DishDatil will have this fuction (addComment)\r\n    \r\n    */\r\n   const DishWithId = ({match}) => {\r\n    return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n    );\r\n  };\r\n  \r\n   \r\n    \r\n    const AboutPage = () => {\r\n      return(\r\n          <About  leaders={this.state.leaders} />\r\n      );\r\n    };\r\n\r\n\r\n\r\n/*{this.props.location.key} \r\nCSSTransition :\r\n    Applies a pair of class names during the appear, enter and exit stages of the transition\r\n    Uses the in prop to decide when to apply the transitions classes\r\nclassNames=\"page will take the classes from APP.css\r\n\r\n*/\r\n      return (\r\n        <div>\r\n           <Header/>\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n\r\n              {/** when you have localhost:300/home will redirect to HomePage (Home) */}\r\n              <Route path='/home' component={HomePage} />\r\n                                  {/**We will pass the dishes  to Menu */}\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes}  />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n\r\n              <Route exact path='/contactus' component={() =>\r\n                 <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n\r\n\r\n              <Route exact path='/aboutus'  component={AboutPage}  />\r\n              <Redirect to=\"/home\" />\r\n          \r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer/>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\n/*withRouter() to inject params provided by React Router into connected components \r\ndeep in the tree without passing them down all the way down as props \r\n\r\nmapStateToProps  mapDispatchToProps functions that will be available in maincomponent\r\n*/\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\n/*\r\n\r\n action.payload contain the data\r\n\r\ndishes:[] will contain the dishes when action.type=ActionTypes.ADD_DISHES\r\n\r\n\r\n...state, isLoading: false, errMess: null, dishes: action.payload \r\nthis take the original state but we don't modificate it, so we create\r\nanother one with the same variable and modificate those variables\r\n*/\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n/*sate por defecto tiene los comentarios del archivo../shared/comments\r\npero si le agregamos un comentario a commments le agregaremos el nuevo comentario\r\n\r\n\r\n*/\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n\r\n        // ADD_COMMENTS es for all comments\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n        /*only when the server response.ok (adding the \r\n            new comment on the server side)  then we \r\n            we added to our  redux store (contaisn the javascript object with the comments)\r\n        */\r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n        //the two \"return\" will return objects\r\n  };\r\n      ","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_PROMOS:\r\nreturn {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\ncase ActionTypes.PROMOS_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\ncase ActionTypes.PROMOS_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading : true,\r\n    errorMessage : null,\r\n    leaders : []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errorMessage: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errorMessage: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errorMessage: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n//Contain the data\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n \n  \n  render() {\n    {/**Store will be available in all in all app*/}\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","\r\nimport {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\n//helps to clean the form after submit the form\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n//combine Reducers \r\nexport const ConfigureStore = () => {\r\n    \r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//Import boostrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n//Fonts\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}